let Kweez = class {
    __proto__;
    static version = "1.0beta";
    static requirements = {
        bootstrap: {
            css: "https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css",
            js: "https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
        }
    };
    constructor(e) {
        this.score = 0, this.__proto__ = [], this.data = e.data || Kweez.log("Kweez.js - ERROR", "No datas provided"), this.messages = e.messages || {
            winner: "Congrats ! You made a perfect.",
            looser: "Doh ! Try again..."
        }, this.template = e.template || {
            container: ["tab-content", "h-100", "w-100", "row", "align-items-center", "m-0"],
            tabs: ["tab-pane", "fade"],
            questions: ["h1", "display-1", "text-success", "fw-bold"],
            choices: ["btn", "btn-lg", "btn-dark", "col-12", "mb-3"]
        }, this.onWin = () => e.onWin || this.win(), this.onLoose = () => e.onLoose || this.loose()
    }

    static createDOMElement(e, t = "div", s = null, o = null) {
        let a = document.createElement(t);
        return "link" === t ? (a.href = e, a.rel = "stylesheet") : "script" === t ? a.src = e : e instanceof Array && (e.map((e => {
            a.classList.add(e)
        })), "button" === t && (a.value = o + 1, a.innerHTML = s), "h1" === t ? a.innerHTML = s : e.includes("tab-pane") && (a.id = "nav-" + document.getElementsByClassName(e[0]).length, a.role = "tabpanel", a.setAttribute("aria-labelledby", a.id + "-tab"), document.getElementsByClassName(e[0]).length || a.classList.add("active", "show"))), console.log(`Element <${t}> (${e}) created`), a
    }

    static log = (...e) => {
        console.info(`%c ${e[0]} %c ${e[1] ?? ""} `, "background: #35495e; padding: 1px; border-radius: 3px 0 0 3px; color: #fff;", "background: #41b883; padding: 1px; border-radius: 0 3px 3px 0; color: #fff;")
    };
    navigate = () => {
        let e = document.querySelector(".tab-pane.active"), t = e.nextElementSibling,
            s = document.querySelector(".tab-pane:last-child");
        ["active", "show"].map((s => {
            e.classList.toggle(s), t.classList.toggle(s)
        })), s.classList.contains("active") && this.checkScore()
    };

    checkAnswer(e, t) {
        parseInt(e) === parseInt(window.atob(window.atob(window.atob(window.atob(window.atob(t)))))) && this.score++
    }

    checkScore = () => {
        Kweez.log("Your score: ", this.score + "/" + this.data.length), document.getElementById("result").innerHTML = this.score, this.score === this.data.length ? this.onWin() : this.onLoose()
    };

    get answers() {
        Kweez.log("Kweez.js", "Stop cheating dude !")
    }

    generate = () => {
        let e, t, s, o, a, n, l = 0;
        for (const r of this.data) {
            s = r.Q, a = r.C, o = r.A, e || document.body.appendChild(e = Kweez.createDOMElement(this.template.container, "main", null, l)), l = 0, e.appendChild(t = Kweez.createDOMElement(this.template.tabs)), t.appendChild(Kweez.createDOMElement(this.template.questions, "h1", s)), this.__proto__.push(window.btoa(window.btoa(window.btoa(window.btoa(window.btoa(o)))))), delete r.A;
            for (const e of a) t.appendChild(n = Kweez.createDOMElement(this.template.choices, "button", e, l)), n.addEventListener("click", (e => {
                this.checkAnswer(e.currentTarget.value, this.__proto__[e.currentTarget.parentElement.getAttribute("id").replace("nav-", "")]), this.navigate(e)
            })), l++
        }
        return e.appendChild(t = Kweez.createDOMElement(this.template.tabs)), t.appendChild(Kweez.createDOMElement(this.template.questions.concat("text-center"), "h1", 'Score: <span id="result"></span>/<span id="total">' + this.data.length + "</span>")), Kweez.log("Kweez.js " + Kweez.version, "Ready"), document.currentScript.remove(), Promise.resolve(this)
    };
    win = () => alert(this.messages.winner);
    loose = () => alert(this.messages.looser)
};
document.currentScript.onload = () => {
    let e, t = !1;
    new URLSearchParams(document.head.querySelector('[src*="kweez.js"]').src.split("/kweez.js").pop()).get("d") ? Kweez.log("Kweez.js", "DEBUG ON") : console.log = () => {
    };
    for (const e of document.querySelectorAll("script")) e.src.includes("bootstrap") && (t = !0);
    for (const t of document.querySelectorAll('link[rel="stylesheet"]')) t.href.includes("bootstrap") && (e = !0);
    t ? console.log("Bootstrap JS already loaded") : document.head.appendChild(Kweez.createDOMElement(Kweez.requirements.bootstrap.js, "script")) && console.log("Bootstrap JS successfully loaded"), t = !0, e ? console.log("Bootstrap CSS already loaded") : document.head.appendChild(Kweez.createDOMElement(Kweez.requirements.bootstrap.css, "link")) && console.log("Bootstrap CSS successfully loaded"), e = !0, t && e && Kweez.log("Kweez.js " + Kweez.version, "Assets loaded")
}, window.onload = () => {
    setTimeout((() => {
        let e = document.getElementById("preload");
        e.style.opacity = 1, setInterval((() => {
            e.style.opacity -= "0.1", "0" === e.style.opacity && e.remove()
        }), 50), clearTimeout(), clearInterval()
    }), 500)
};